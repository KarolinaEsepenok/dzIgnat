{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","src","avatar","name","message","time","messageData","HW1","Affair","priorityClass","s","item","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","key","set","e","setFilter","currentTarget","value","setClass","filter","active","buttonFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onEnter","error","totalUsers","inputClass","errorInput","input","greeting","onChange","onKeyDown","onBlur","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,IAAM,uB,wCCAtND,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,MAAQ,wBAAwB,WAAa,6BAA6B,MAAQ,0B,iBCA1KD,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCAhKD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,4BAA4B,MAAQ,6B,iBCArID,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,MAAQ,6BAA6B,SAAW,gCAAgC,cAAgB,uC,oBCAlHD,EAAOC,QAAU,CAAC,IAAM,mB,gMC2BTC,MAlBf,SAAkBC,GACd,OACI,yBAAKC,UAAU,kBACf,yBAAKA,UAAU,SAASC,IAAKF,EAAMG,SAC/B,yBAAKF,UAAU,YACX,wBAAIA,UAAU,cAAcD,EAAMI,MACnC,yBAAKH,UAAU,eACX,uBAAGA,UAAU,eAAeD,EAAMK,SAClC,2BAAIL,EAAMM,UCfvBC,EACM,4IADNA,EAEI,QAFJA,EAGO,yDAHPA,EAII,QAmBKC,MAhBf,WACI,OACI,6BACI,kBAAC,EAAD,CACIL,OAAQI,EACRH,KAAMG,EACNF,QAASE,EACTD,KAAMC,M,uBCUPE,MAjBf,SAAgBT,GACZ,IACMU,EAAgBC,IAAEC,KAAO,IAAMD,IAAEX,EAAMa,OAAOC,UAIpD,OACI,yBAAKb,UAAWU,IAAEE,QAEd,yBAAKZ,UAAWU,IAAEC,MAAOZ,EAAMa,OAAOT,MACtC,yBAAKH,UAAWS,GAAhB,IAAiCV,EAAMa,OAAOC,SAA9C,KAEA,4BAAQC,QAXO,WAAOf,EAAMgB,qBAAqBhB,EAAMa,OAAOI,MAW7BhB,UAAWU,IAAEC,KAAO,IAAMD,IAAEO,QAA7D,OC4BGC,MArCf,SAAiBnB,GACb,IAAMoB,EAAgBpB,EAAMqB,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAEN,IACPJ,OAAQU,EACRP,qBAAsBhB,EAAMgB,0BAQ9BS,EAAM,SAACC,GACT1B,EAAM2B,UAAUD,EAAEE,cAAcC,QAM9BC,GAJQnB,IAAEO,OAAiC,QAAjBlB,EAAM+B,QAAmBpB,IAAEqB,OAC5CrB,IAAEO,OAAiC,SAAjBlB,EAAM+B,QAAoBpB,IAAEqB,OAC5CrB,IAAEO,OAAiC,WAAjBlB,EAAM+B,QAAsBpB,IAAEqB,OACnDrB,IAAEO,OAAiC,QAAjBlB,EAAM+B,QAAmBpB,IAAEqB,OAC1C,SAACD,GACd,OAAOpB,IAAEO,QAAUlB,EAAM+B,SAAWA,EAAS,IAAMpB,IAAEqB,OAAQ,MAKjE,OACI,yBAAK/B,UAAWU,IAAEsB,cACbb,EACD,4BAAQL,QAASU,EAAKxB,UAAW6B,EAAS,OAAQD,MAAO,OAAzD,OACA,4BAAQd,QAASU,EAAKxB,UAAW6B,EAAS,QAASD,MAAO,QAA1D,QACA,4BAAQd,QAASU,EAAKxB,UAAW6B,EAAS,UAAWD,MAAO,UAA5D,UACA,4BAAQd,QAASU,EAAKxB,UAAW6B,EAAS,OAAQD,MAAO,OAAzD,SC9BNK,EAAoC,CACtC,CAACjB,IAAK,EAAGb,KAAM,QAASU,SAAU,QAClC,CAACG,IAAK,EAAGb,KAAM,QAASU,SAAU,OAClC,CAACG,IAAK,EAAGb,KAAM,QAASU,SAAU,OAClC,CAACG,IAAK,EAAGb,KAAM,OAAQU,SAAU,QACjC,CAACG,IAAK,EAAGb,KAAM,aAAcU,SAAU,WAyC5BqB,MA5Bf,WACI,MAA8BC,mBAAuBF,GAArD,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAqB,OAAjD,mBAAOL,EAAP,KAAeJ,EAAf,KAEMY,EAbmB,SAACF,EAAsBN,GAChD,MAAe,QAAXA,EAAyBM,EAEnBA,EAAQN,QAAO,SAAAR,GAAC,OAAEA,EAAET,WAAaiB,KAUnBS,CAAcH,EAASN,GAG/C,OACI,6BACI,6BAIA,kBAAC,EAAD,CACIV,KAAMkB,EACNZ,UAAWA,EACXX,qBAXiB,SAACC,GAAD,OAAiBqB,EATtB,SAACD,EAAuBpB,GAChD,OAAOoB,EAAQN,QAAO,SAAAR,GAAC,OAAGA,EAAEN,MAAQA,KAQqBwB,CAAaJ,EAASpB,KAYnEc,OAAQA,IAGZ,6BAGA,+B,yBCxBGW,EAnB+B,SAAC,GAEzC,IADDtC,EACA,EADAA,KAAMuC,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,QAASC,EACzC,EADyCA,MAAOC,EAChD,EADgDA,WAE3CC,EAAaF,EAAQnC,IAAEsC,WAAatC,IAAEuC,MAE5C,OACI,yBAAKjD,UAAWU,IAAEwC,UACd,2BAAOtB,MAAOzB,EACPgD,SAAUT,EACV1C,UAAW+C,EACXK,UAAWR,EACXS,OAAQX,IACf,yBAAK1C,UAAWU,IAAEmC,OAAQA,GAC1B,4BAAS/B,QAAS6B,EAAS3C,UAAWU,IAAEO,OAAQqC,UAAWnD,GAA3D,OACA,yBAAKH,UAAWU,IAAE6C,OAAQT,KC4BvBU,EAzCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBACrE,EAAwBvB,mBAAiB,IAAzC,mBAAOhC,EAAP,KAAawD,EAAb,KACA,EAA0BxB,mBAAiB,IAA3C,mBAAOU,EAAP,KAAce,EAAd,KAcMjB,EAAU,WACZe,EAAgBvD,GAChBwD,EAAQ,IACRC,EAAS,IACTC,MAAM,UAAD,OAAW1D,EAAX,OAQH2C,EAAaW,EAAMK,OACzB,OACI,kBAAC,EAAD,CACI3D,KAAMA,EACNuC,gBA7BgB,SAACjB,GAEK,KAA1BA,EAAEE,cAAcC,MAAgBgC,EAAS,mBAAqBA,EAAS,IACvED,EAAQlC,EAAEE,cAAcC,QA2BpBe,QAASA,EACTE,MAAOA,EACPC,WAAYA,EACZF,QAbQ,SAACnB,GACC,UAAVA,EAAEF,KAAmBpB,GACrBwC,Q,QCPGoB,MAtBf,WACI,MAA0B5B,mBAAqB,IAA/C,mBAAOsB,EAAP,KAAcO,EAAd,KAQA,OACI,6BACI,6BAEA,kBAAC,EAAD,CAAmBP,MAAOA,EAAOC,gBAXjB,SAACvD,GACrB,IAAM8D,EAAO,CACTjD,IAAKkD,cACL/D,QAEJ6D,EAAS,GAAD,mBAAKP,GAAL,CAAYQ,QAOhB,6BAGA,+B,yHC8BGE,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEjB,EAOH,EAPGA,SAAUkB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAY1B,EAMf,EANeA,QACZC,EAKH,EALGA,MACA7C,EAIH,EAJGA,UAAWuE,EAId,EAJcA,cAERC,EAEN,iBAeKC,EAAkB,UAAM/D,IAAEmC,MAAR,YAAiB0B,GAAgC,IACnEG,EAAmB,UAAMhE,IAAEuC,MAAR,YAAiBvC,IAAEmC,MAAQnC,IAAEsC,WAAatC,IAAEiE,WAA5C,YAA0D3E,GAEnF,OACI,oCACI,yCACIoE,KAAM,OACNjB,SArBa,SAAC1B,GACtB0B,GACGA,EAAS1B,GAEZ4C,GAAgBA,EAAa5C,EAAEE,cAAcC,QAkBrC0C,WAhBe,SAAC7C,GACxB6C,GAAcA,EAAW7C,GAEzBmB,GACa,UAAVnB,EAAEF,KACFqB,KAYK5C,UAAW0E,GAEPF,IAEP3B,GAAS,0BAAM7C,UAAWyE,GAAqB5B,K,wDC1B7C+B,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK7E,EAGR,EAHQA,UACFwE,EAEN,iBACKM,EAAc,UAAMpE,IAAEO,OAAR,YAAkB4D,EAAMnE,IAAEmE,IAAMnE,IAAEqE,QAAlC,YAA6C/E,GAEjE,OACI,0CACIA,UAAW8E,GACPN,K,gGCsBDQ,EAhCyC,SAAC,GASpD,EAPGZ,KAOF,IANEjB,EAMH,EANGA,SAAU8B,EAMb,EANaA,gBACVjF,EAKH,EALGA,UACAkF,GAIH,EALcX,cAKd,EAJGW,UAEGV,EAEN,iBAOKE,EAAmB,UAAMhE,IAAEyE,SAAR,YAAoBnF,GAAwB,IAErE,OACI,+BACI,yCACIoE,KAAM,WACNjB,SAZa,SAAC1B,GACtB0B,GAAYA,EAAS1B,GACrBwD,GAAmBA,EAAgBxD,EAAEE,cAAcyD,UAW3CpF,UAAW0E,GAEPF,IAEPU,GAAY,0BAAMlF,UAAWU,IAAE6D,eAAgBW,KCwC7CG,MAxEf,WACI,MAAwBlD,mBAAiB,IAAzC,mBAAOmD,EAAP,KAAaC,EAAb,KACM1C,EAAQyC,EAAO,GAAK,QAEpBE,EAAY,WACV3C,EACAgB,MAAM,6EAENA,MAAMyB,IAId,EAA8BnD,oBAAkB,GAAhD,mBAAOiD,EAAP,KAAgBK,EAAhB,KAGA,OACI,6BACI,6BADJ,cAGI,yBAAKzF,UAAWU,IAAEgF,QACd,kBAAC,EAAD,CACI9D,MAAO0D,EACPjB,aAAckB,EACd3C,QAAS4C,EACT3C,MAAOA,IAIX,kBAAC,EAAD,CACI7C,UAAWU,IAAEiF,OAKjB,kBAAC,EAAD,gBAIA,kBAAC,EAAD,CACId,KAAG,EACH/D,QAAS0E,GAFb,WAOA,kBAAC,EAAD,CAAalC,UAAQ,GAArB,YAMA,kBAAC,EAAD,CACI8B,QAASA,EACTH,gBAAiBQ,GAFrB,aAIe,QAIf,kBAAC,EAAD,CAAeL,QAASA,EAASjC,SA9CxB,SAAC1B,GAAD,OAAsCgE,EAAWhE,EAAEE,cAAcyD,aAiD9E,6BAKA,+BCtDGQ,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAGC,MAVf,WACI,OACI,6BACI,oCACA,gDACA,mF,OCGGC,EARA,WACX,OACI,+BCMOC,EARI,WACf,OACI,+BCKKC,EACG,cADHA,EAED,UAFCA,EAGG,eA4BDC,OAxBf,WACI,OACI,6BAEI,kBAAC,IAAD,KAIA,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,OAEpD,kBAAC,IAAD,CAAOE,KAAMF,EAAiBI,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,EAAaI,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,EAAkBI,OAAQ,kBAAM,kBAAC,EAAD,SARjD,gBAaA,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,EAAD,Y,mBClBlBE,OAVf,WACI,OACI,yBAAKtG,UAAWU,KAAE6F,QACd,kBAAC,IAAD,CAASF,GAAIL,EAAiBhG,UAAWU,KAAE8F,KAAMC,gBAAiB/F,KAAEqB,QAApE,cACA,kBAAC,IAAD,CAASsE,GAAIL,EAAahG,UAAWU,KAAE8F,KAAMC,gBAAiB/F,KAAEqB,QAAhE,UACA,kBAAC,IAAD,CAASsE,GAAIL,EAAkBhG,UAAWU,KAAE8F,KAAMC,gBAAiB/F,KAAEqB,QAArE,aCYG2E,OAhBf,WACI,OACI,6BAGG,kBAAC,IAAD,KAEC,kBAAC,GAAD,MAEA,kBAAC,GAAD,SCWGC,OAlBf,WACI,OACI,yBAAK3G,UAAWU,IAAEiG,KACd,iDAQA,kBAAC,GAAD,QCPQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCXRC,IAASb,OACL,kBAAC,IAAMc,WAAP,KACI,kBAAC,IAAD,KAAe,kBAAC,GAAD,QAGnBC,SAASC,eAAe,SD+HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA9E,GACH+E,QAAQ/E,MAAMA,EAAMzC,c","file":"static/js/main.225d361b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__2jATD\",\"active\":\"Affairs_active__3lmne\",\"affair\":\"Affairs_affair__3aS1d\",\"item\":\"Affairs_item__3BQM8\",\"high\":\"Affairs_high__mR08d\",\"middle\":\"Affairs_middle__2qVVW\",\"low\":\"Affairs_low__3JUAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__KNOSe\",\"error\":\"Greeting_error__1tW02\",\"input\":\"Greeting_input__oDYMK\",\"errorInput\":\"Greeting_errorInput__3ox0D\",\"count\":\"Greeting_count__VQ9uZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1Nr-v\",\"superInput\":\"SuperInputText_superInput__2bvkr\",\"errorInput\":\"SuperInputText_errorInput__1_ca_\",\"error\":\"SuperInputText_error__2n8LC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2Auk-\",\"red\":\"SuperButton_red__3xADG\",\"button\":\"SuperButton_button__2pjCY\",\"blink\":\"SuperButton_blink__2WJpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2BUiN\",\"column\":\"HW4_column__3s3lM\",\"testSpanError\":\"HW4_testSpanError__TFTzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lebel\":\"SuperCheckbox_lebel__e25Ej\",\"checkbox\":\"SuperCheckbox_checkbox__1TjXo\",\"spanClassName\":\"SuperCheckbox_spanClassName__1LkB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2ScAw\"};","import React from 'react'\n\nimport './MessageCss.css'\n\ntype messageDataType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\nfunction Message (props:messageDataType) {\n    return (\n        <div className=\"messageWrapper\">\n        <img className=\"avatar\" src={props.avatar}/>\n            <div className=\"mainInfo\">\n                <h3 className=\"authorName\">{props.name}</h3>\n               <div className=\"messageTime\">\n                   <p className=\"mainMessage\">{props.message}</p>\n                   <p>{props.time}</p>\n               </div>\n\n\n            </div>\n\n       </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://kolobok.ua/i/97/11/41/971141/image_main/a9dff2ad42341fb7152def8cadb7822b-quality_70Xresize_crop_1Xallow_enlarge_0Xw_698Xh_465.jpg',\n    name: 'Artem',\n    message: 'npm start нажимал? ',\n    time: '22:00'\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}/>\n\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id:number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n    const priorityClass = s.item + ' ' + s[props.affair.priority]\n\n\n\n    return (\n        <div className={s.affair}>\n\n            <div className={s.item}>{props.affair.name}</div>\n            <div className={priorityClass}>[{props.affair.priority}]</div>\n\n            <button onClick={deleteCallback} className={s.item + ' ' + s.button}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work]\\\\\\\\\\\\\\\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')} // need to fix\n    const setHigh = () => {props.setFilter('high')}\n    const setMiddle = () => {props.setFilter('middle')}\n    const setLow = () => {props.setFilter('low')}\n    const set = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\n        props.setFilter(e.currentTarget.value as FilterType)\n    }\n    const onAll = s.button + ' ' + (props.filter === 'all' ? s.active : '')\n    const onHigh = s.button + ' ' + (props.filter === 'high' ? s.active : '')\n    const onMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active : '')\n    const onLow = s.button + ' ' + (props.filter === 'low' ? s.active : '')\n    const setClass = (filter: FilterType) =>{\n        return s.button + (props.filter === filter ? ' ' + s.active: '')\n    }\n\n\n\n    return (\n        <div className={s.buttonFilter}>\n            {mappedAffairs}\n            <button onClick={set} className={setClass('all')} value={'all'}>All</button>\n            <button onClick={set} className={setClass('high')} value={'high'}>High</button>\n            <button onClick={set} className={setClass('middle')} value={'middle'}>Middle</button>\n            <button onClick={set} className={setClass('low')} value={'low'}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport affairs from \"./Affairs\";\n\n\n// types\nexport type AffairPriorityType = 'high' |'low' | 'high'|'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs:AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n   else\n       return affairs.filter(a=>a.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a =>a._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div >\n            <hr/>\n\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    onEnter:  (e: KeyboardEvent<HTMLInputElement>) => void\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, onEnter, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\n\n    return (\n        <div className={s.greeting}>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}\n                   onKeyDown={onEnter}\n                   onBlur={setNameCallback}/>\n            <div className={s.error}>{error}</div>\n            <button  onClick={addUser} className={s.button} disabled={!name}>add</button>\n            <div className={s.count}>{totalUsers}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n\n        e.currentTarget.value === '' ?  setError('name is require') : setError('')\n        setName(e.currentTarget.value);\n\n        /*const trinmedName = e.currentTarget.value.trim()\n        if (trinmedName) {\n\n\n        } else {\n\n        }*/\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        setName('')\n        setError('');\n        alert(`Hello  ${name}!`)\n\n    }\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n        }\n    }\n    const totalUsers = users.length // need to fix\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n            onEnter={onEnter}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from 'uuid'\n\n\nexport type UserType = {\n    _id: string// need to fix any\n    name: string // need to fix any\n}\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])// need to fix any\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name,\n        }// need to fix any\n        setUsers([...users, user]) // need to fix\n    }\n    return (\n        <div>\n            <hr/>\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${s.error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                  //  spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {'some'}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\n\n\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport Junior from './pages/Junior';\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS:'/junior-plus'\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n\n            <Route render={() => <Error404/>}/>\n\n           </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport s from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={s.header}>\n            <NavLink to={PATH.PRE_JUNIOR} className={s.link} activeClassName={s.active}>pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={s.link} activeClassName={s.active}>junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={s.link} activeClassName={s.active}>junior+</NavLink>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n\n           <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n          </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\"\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            {/*  <HW1/>\n            <HW2/>\n\n            <HW3/>\n\n            eslint-disable-next-line react/jsx-no-undef\n            <HW4/>*/}\n            <HW5/>\n\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter><App/></BrowserRouter>\n\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}